{"version":3,"sources":["components/BubbleSort/BubbleSort.js","components/InsertionSort/InsertionSort.js","components/SelectionSort/SelectionSort.js","components/ArrayVisual/ArrayVisual.js","App.js","serviceWorker.js","index.js"],"names":["bubbleSort","auxillaryArray","animations","swapped","len","length","i","push","tmp","insertionSort","inputArr","key","j","selectionSort","arr","min","ArrayVisual","props","sortStart","setState","stop","buttonDisable","reset","state","array","algorithm","onGenerateArray","stepsMessage","resetBars","Array","from","map","x","Math","floor","random","marks","value","label","valuetext","speed","valueLabelFormat","findIndex","mark","handleAlgorithmChange","event","target","onStop","messageColor","onReset","sorted","index","targetHTML","b1HTML","b2HTML","setTimeout","slice","selectionSortAnimated","frameEnd","swap","action","document","getElementsByClassName","style","backgroundColor","innerText","check","self","newArray","temp","this","insertionSortAnimated","bubbleSortAnimated","bar1","bar2","bars","className","idx","height","Container","maxWidth","color","Button","onClick","variant","float","marginRight","textTransform","disabled","FormControl","bottom","InputLabel","id","Select","labelId","onChange","MenuItem","Typography","marginTop","Slider","width","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","max","step","React","Component","App","onBubbleChange","onSort","sort","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c8713d8.chunk.js","sourcesContent":["export function bubbleSortAnimated(array) {\r\n    let animations  = [];\r\n    let auxillaryArray = array.slice();\r\n    bubbleSort(auxillaryArray, animations);\r\n    return [animations];\r\n}\r\n\r\n\r\nlet bubbleSort = (auxillaryArray, animations) => {\r\n    let len = auxillaryArray.length;\r\n    let swapped;\r\n    do {\r\n        swapped = false;\r\n        for (let i = 0; i < len; i++) {\r\n        \tanimations.push([\"compare\", i, i + 1]);\r\n            if (auxillaryArray[i] > auxillaryArray[i + 1]) {\r\n                let tmp = auxillaryArray[i];\r\n                auxillaryArray[i] = auxillaryArray[i + 1];\r\n                auxillaryArray[i + 1] = tmp;\r\n                swapped = true;\r\n                animations.push([\"swap\", i, auxillaryArray[i + 1]]);\r\n            }\r\n        }\r\n    } while (swapped);\r\n    animations.push([\"sorted\", 0, 0]);\r\n    return auxillaryArray;\r\n};\r\n\r\n","export function insertionSortAnimated(array) {\r\n    let animations  = [];\r\n    let auxillaryArray = array.slice();\r\n    insertionSort(auxillaryArray, animations);\r\n    return [animations];\r\n}\r\n\r\nlet insertionSort = (inputArr, animations) => {\r\n    let length = inputArr.length;\r\n    for (let i = 1; i < length; i++) {\r\n        animations.push([\"target\", i]);\r\n        let key = inputArr[i];\r\n        let j = i - 1;\r\n        while (j >= 0 && inputArr[j] > key) {\r\n            inputArr[j + 1] = inputArr[j];\r\n            animations.push([\"swap\", i, j]);\r\n            j = j - 1;\r\n            animations.push([\"target\", j+1]);\r\n        }\r\n        inputArr[j + 1] = key;\r\n    }\r\n    animations.push([\"sorted\", -1, -1]);\r\n    return inputArr;\r\n};","export function selectionSortAnimated(array) {\r\n    let animations  = [];\r\n    let auxillaryArray = array.slice();\r\n    selectionSort(auxillaryArray, animations);\r\n    return [animations];\r\n}\r\n\r\nlet selectionSort = (arr, animations) => {\r\n    let len = arr.length;\r\n    for (let i = 0; i < len; i++) {\r\n    \tanimations.push(['target', i]);\r\n        let min = i;\r\n        for (let j = i + 1; j < len; j++) {\r\n        \tanimations.push(['compare', j]);\r\n            if (arr[min] > arr[j]) {\r\n                min = j;\r\n                animations.push(['min', min]);\r\n            }\r\n        }\r\n        if (min !== i) {\r\n        \tanimations.push(['swap', min, i]);\r\n            let tmp = arr[i];\r\n            arr[i] = arr[min];\r\n            arr[min] = tmp;\r\n        }else{\r\n        \tanimations.push(['keep', min]);\r\n        }\r\n\r\n    }\r\n    animations.push(['sorted', -1, -1])\r\n    return arr;\r\n}","import React from 'react';\r\nimport './ArrayVisual.css';\r\nimport {bubbleSortAnimated} from '../BubbleSort/BubbleSort';\r\nimport {insertionSortAnimated} from '../InsertionSort/InsertionSort';\r\nimport {selectionSortAnimated} from '../SelectionSort/SelectionSort';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nclass ArrayVisual extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tarray: [],\r\n\t\t\treset: [],\r\n\t\t\tsorted: false,\r\n\t\t\tstepsMessage: '',\r\n\t\t\tmessageColor: 'green',\r\n\t\t\tspeed: [],\r\n\t\t\tstop: false,\r\n\t\t\talgorithm: 'bubble',\r\n\t\t\tbuttonDisable: 'enabled'\r\n\t\t}\r\n\t}\r\n\r\n\tsortStart = () => {\r\n\t\tthis.setState({stop: false})\r\n\t\tthis.setState({buttonDisable: 'disable'})\r\n\t\tthis.setState({reset: this.state.array})\r\n\r\n\t\tif(this.state.algorithm === 'bubble') {\r\n\t\t\tthis.bubbleSort(this.state.array,0, 0, 0)\r\n\t\t} else if(this.state.algorithm === 'insertion') {\r\n\t\t\tthis.insertionSort(this.state.array,0,0,0)\r\n\t\t} else if(this.state.algorithm === 'selection') {\r\n\t\t\tthis.selectionSort(this.state.array,0,0,0,0)\r\n\t\t}\r\n\t}\r\n\r\n\tselectionSort(array, index, targetHTML, b1HTML, b2HTML) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst [animations] = selectionSortAnimated(array);\r\n\t\t\tvar frameEnd = animations.length;\r\n\t\t\tif(index === frameEnd) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tvar swap = false;\r\n\t\t\tvar action = animations[index][0];\r\n\r\n\t\t    if(this.state.stop === true) {\r\n\t        \treturn;\r\n\t        }\r\n\r\n\t        if(action === 'target') {\r\n\t        \tif(b2HTML !== -1) {\r\n\t        \t\tvar min = document.getElementsByClassName('bar')[b2HTML];\r\n\t\t\t\t\tmin.style.backgroundColor = '#357edd';\r\n\t\t\t\t\tb2HTML = -1;\r\n\t\t\t\t}\r\n\t        \tvar target = document.getElementsByClassName('bar')[animations[index][1]];\r\n\t        \ttarget.style.backgroundColor = 'orange';\r\n\t        \ttargetHTML = animations[index][1];\r\n\t        \tthis.setState({stepsMessage: `Target min ${target.innerText}`})\r\n        \t\tthis.setState({messageColor: 'orange'})\r\n\t        }else if(action === 'compare') {\r\n        \t\tvar check = document.getElementsByClassName('bar')[animations[index][1]];\r\n        \t\tcheck.style.backgroundColor = 'red';\r\n        \t\tb1HTML = animations[index][1];  \t\r\n        \t}else if(action === 'min') {\r\n        \t\tmin = document.getElementsByClassName('bar')[animations[index][1]];\r\n        \t\tmin.style.backgroundColor = 'orange';\r\n        \t\tif(b2HTML !== -1) {\r\n\t        \t\tvar temp = document.getElementsByClassName('bar')[b2HTML];\r\n\t\t\t\t\ttemp.style.backgroundColor = '#357edd';\r\n\t\t\t\t}\r\n        \t\tb2HTML = animations[index][1];  \r\n        \t\tthis.setState({stepsMessage: `New min ${min.innerText}`})\r\n        \t\tthis.setState({messageColor: 'orange'})\t\r\n        \t}else if(action === 'swap') {\t\r\n\t        \tswap = true;\r\n\t        \ttarget = document.getElementsByClassName('bar')[animations[index][1]];\r\n\t        \tmin = document.getElementsByClassName('bar')[animations[index][2]];\r\n\t        \ttarget.style.backgroundColor = 'purple';\r\n\t        \tmin.style.backgroundColor = 'purple';\r\n\t        \tthis.setState({stepsMessage: `Swapping ${min.innerText} and ${target.innerText}`})\r\n        \t\tthis.setState({messageColor: 'purple'})\t\r\n\t        }else if(action === 'keep') {\t\r\n\t        \tmin = document.getElementsByClassName('bar')[animations[index][1]];\r\n\t        \tmin.style.backgroundColor = '#357edd';\r\n\t        \tthis.setState({stepsMessage: `No swapping`})\r\n        \t\tthis.setState({messageColor: 'purple'})\t\r\n\t        } else if(action === 'sorted') {\r\n        \t\tthis.setState({stepsMessage: 'Sorted!'})\r\n        \t\tthis.setState({messageColor: 'green'})\r\n        \t\tthis.setState({buttonDisable: 'enabled'})\r\n        \t\treturn;\r\n        \t}\r\n\r\n\t        setTimeout(() => {\r\n\t\t\t\tif(check) {\r\n\t\t\t\t\tcheck.style.backgroundColor = '#357edd';\r\n\t\t\t\t}\r\n\t\t\t\tif(target && swap) {\r\n\t\t\t\t\ttarget.style.backgroundColor = '#357edd';\r\n\t\t\t\t}\r\n\t\t\t\tif(min && swap) {\r\n\t\t\t\t\tmin.style.backgroundColor = '#357edd';\r\n\t\t\t\t}\r\n\r\n\t\t\t    if(swap) {\r\n\t\t\t        const self = this\r\n\t\t\t        const newArray = self.state.array.slice()\r\n\t\t\t        var temp = newArray[targetHTML];\r\n\t\t\t        newArray[targetHTML] = newArray[b2HTML]\r\n\t\t\t        newArray[b2HTML] = temp   \r\n\t\t\t        \t\r\n\t\t\t        self.setState({array: newArray})\r\n\t\t\t    }\r\n\t\t\t}, this.state.speed[1])\r\n\r\n\t        this.selectionSort(array,++index,targetHTML,b1HTML,b2HTML)\r\n\t\t}, this.state.speed[1]);\r\n\r\n\t}\r\n\r\n\tinsertionSort(array, index, b1HTML, b2HTML) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst [animations] = insertionSortAnimated(array);\r\n\t\t\tvar frameEnd = animations.length;\r\n\t\t\tif(index === frameEnd) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tvar swap = false;\r\n\t\t\tvar action = animations[index][0];\r\n\r\n\t\t    if(this.state.stop === true) {\r\n\t        \treturn;\r\n\t        }\r\n\r\n\t        if(action === 'target') {\r\n\t        \tvar target = document.getElementsByClassName('bar')[animations[index][1]];\r\n\t        \ttarget.style.backgroundColor = 'orange';\r\n\t        \tb1HTML = animations[index][1];\r\n\t        \tthis.setState({stepsMessage: `Target ${target.innerText}`})\r\n        \t\tthis.setState({messageColor: 'orange'})\r\n\t        }else if(action === 'swap') {\r\n\t        \ttarget = document.getElementsByClassName('bar')[animations[index][2]+1];\r\n\t        \tvar check = document.getElementsByClassName('bar')[animations[index][2]];\r\n\t        \ttarget.style.backgroundColor = 'purple';\r\n\t        \tcheck.style.backgroundColor = 'purple';\r\n\t        \tb2HTML = animations[index][2];  \t\r\n\t        \tswap = true;\r\n\t        \tthis.setState({stepsMessage: `Target ${target.innerText} less than ${check.innerText}`})\r\n        \t\tthis.setState({messageColor: 'purple'})\r\n\t        } else if(action === 'sorted') {\r\n        \t\tthis.setState({stepsMessage: 'Sorted!'})\r\n        \t\tthis.setState({messageColor: 'green'})\r\n        \t\tthis.setState({buttonDisable: 'enabled'})\r\n        \t\treturn;\r\n        \t}\r\n\r\n\t        setTimeout(() => {\r\n\t\t\t\tif(target) {\r\n\t\t\t        target.style.backgroundColor = '#357edd';\r\n\t\t\t\t}\r\n\t\t\t\tif(check)\r\n\t\t\t\t\tcheck.style.backgroundColor = '#357edd';\r\n\r\n\t\t\t    if(swap) {\r\n\t\t\t        const self = this\r\n\t\t\t        const newArray = self.state.array.slice()\r\n\t\t\t        var temp = newArray[b1HTML];\r\n\t\t\t        newArray[b1HTML] = newArray[b2HTML]\r\n\t\t\t        newArray[b2HTML] = temp   \r\n\t\t\t        \t\r\n\t\t\t        self.setState({array: newArray})\r\n\t\t\t    }\r\n\t\t\t}, this.state.speed[1])\r\n\r\n\t        this.insertionSort(array,++index,b1HTML,b2HTML)\r\n\t\t}, this.state.speed[1]);\r\n\r\n\t}\r\n\r\n\tbubbleSort(array, index, b1HTML, b2HTML) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst [animations] = bubbleSortAnimated(array);\r\n\t\t\tvar frameEnd = animations.length;\r\n\t\t\tif(index === frameEnd) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tvar swap = false;\r\n        \tvar action = animations[index][0];\r\n\t        var bar1 = document.getElementsByClassName('bar')[animations[index][1]];\r\n\t        var bar2 = document.getElementsByClassName('bar')[animations[index][1] + 1];\r\n\t   \r\n\t   \t\tif(this.state.stop === true) {\r\n        \t\treturn;\r\n        \t}\r\n\r\n        \tif(action === 'compare') {\r\n        \t\tif(bar1 && bar2) {\r\n        \t\tthis.setState({stepsMessage: `Comparing ${bar1.innerText} and ${bar2.innerText}`})\r\n        \t\tthis.setState({messageColor: 'red'})\r\n\r\n\t        \tbar1.style.backgroundColor = 'red';\r\n\t        \tbar2.style.backgroundColor = 'red';\r\n        \t\t}\r\n\t        \tb1HTML = animations[index][1];\r\n\t        \tb2HTML = animations[index][2];\r\n        \t}else if(action === 'swap'){\r\n        \t\tswap = true;\r\n        \t\tif(bar1 && bar2) {\r\n\t\t\t\t\tbar1.style.backgroundColor = 'purple';\r\n\t\t\t        bar2.style.backgroundColor = 'purple';\r\n\t\t\t\t}\r\n        \t\tthis.setState({stepsMessage: `Swapping ${bar1.innerText} with ${bar2.innerText}`})\r\n        \t\tthis.setState({messageColor: 'purple'})\r\n    \r\n        \t} else if(action === 'sorted') {\r\n        \t\tthis.setState({stepsMessage: 'Sorted!'})\r\n        \t\tthis.setState({messageColor: 'green'})\r\n        \t\tthis.setState({buttonDisable: 'enabled'})\r\n        \t\treturn;\r\n        \t}\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif(bar1 && bar2) {\r\n\t\t\t\tbar1.style.backgroundColor = '#357edd';\r\n\t\t        bar2.style.backgroundColor = '#357edd';\r\n\t\t\t\t}\r\n\t\t        if(swap) {\r\n\t\t        \tconst self = this\r\n\t\t        \tconst newArray = self.state.array.slice()\r\n\t\t        \tvar temp = newArray[b1HTML];\r\n\t\t        \tnewArray[b1HTML] = newArray[b2HTML]\r\n\t\t        \tnewArray[b2HTML] = temp   \r\n\t\t        \tself.setState({array: newArray})\r\n\t\t        }\r\n\t\t\t}, this.state.speed[1])\r\n\r\n        \tthis.bubbleSort(array, ++index, b1HTML, b2HTML);  \r\n\t\t}, this.state.speed[1]);\r\n\r\n\t}\r\n\r\n\tresetBars() {\r\n  \t\tvar bars = document.getElementsByClassName('bar');\r\n\t\tfor(let i=0; i < bars.length; i++) {\r\n\t\t\tbars[i].style.backgroundColor = '#357edd'\r\n\t\t}\r\n  \t}\r\n\r\n\tonGenerateArray = () => {\r\n\t\tthis.setState({stop: true})\r\n\t\tthis.setState({stepsMessage: ''})\r\n\t\tthis.setState({buttonDisable: 'enabled'})\r\n\t\tthis.resetBars();\r\n\t    const ARRAY_LENGTH = 6;\r\n\t    const min = 1;\r\n\t    const max = 80;\r\n\t    this.setState({array: Array.from(Array(ARRAY_LENGTH)).map(x=>Math.floor(Math.random() * (max-min) + min))})\r\n  \t}\r\n\r\n\tmarks = [\r\n\t  {\r\n\t    value: 100,\r\n\t    label: 'Slowest',\r\n\t  },\r\n\t  {\r\n\t    value: 600,\r\n\t    label: 'Slower',\r\n\t  },\r\n\t  {\r\n\t    value: 1100,\r\n\t    label: 'Medium',\r\n\t  },\r\n\t  {\r\n\t    value: 1700,\r\n\t    label: 'Faster',\r\n\t  },\r\n\t  {\r\n\t    value: 2100,\r\n\t    label: 'Fastest',\r\n\t  },\r\n\t];\r\n\r\n\tvaluetext = (value) => {\r\n\t\tif(this.state.speed[0] !== value) {\r\n\t\t\tswitch(value) {\r\n\t\t\t\tcase 100: this.setState({speed: [value, 2100]}); break;\r\n\t\t\t\tcase 600: this.setState({speed: [value, 1700]}); break;\r\n\t\t\t\tcase 1100: this.setState({speed: [value, 1100]}); break;\r\n\t\t\t\tcase 1700: this.setState({speed: [value, 600]}); break;\r\n\t\t\t\tcase 2100: this.setState({speed: [value, 100]}); break;\r\n\t\t\t}\r\n\t\t}\r\n\t \treturn({value})\r\n\t}\r\n\r\n\tvalueLabelFormat = (value) => {\r\n\t  return this.marks.findIndex((mark) => mark.value === value) + 1;\r\n\t}\r\n\r\n\thandleAlgorithmChange = (event) => {\r\n\t  this.setState({algorithm: event.target.value})\r\n\t  return event.target.value\r\n\t};\r\n\r\n\tonStop = () => {\r\n\t\tthis.setState({buttonDisable: 'enabled'})\r\n\t\tthis.setState({stop: true})\r\n\t\tthis.setState({stepsMessage: 'Stopped'})\r\n\t\tthis.setState({messageColor: 'red'})\r\n\t\tthis.resetBars();\r\n  \t}\r\n\r\n  \tonReset = () => {\r\n  \t\tthis.setState({buttonDisable: 'enabled'})\r\n  \t\tthis.setState({stop: true})\r\n  \t\tthis.setState({stepsMessage: 'Reset'})\r\n\t\tthis.setState({messageColor: 'red'})\r\n\t\tthis.resetBars();\r\n\t\tif(this.state.reset.length)\r\n\t\t\tthis.setState({array: this.state.reset})\r\n  \t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { array, messageColor, stepsMessage, buttonDisable, algorithm } = this.state\r\n\t\tif(array.length) {\r\n  \t\t\treturn ( \r\n  \t\t\t\t<div>\r\n\t  \t\t\t\t<div className=\"barcontainer\">\r\n\t  \t\t\t\t\t<div className='barcontainerheader'></div>\r\n\r\n\t\t  \t\t\t\t{array.map((arr, idx) => \r\n\t\t\t\t\t\t<div className='bar' style={{height: arr+10 +'%'}}  key= {idx}>\r\n\t\t  \t\t\t\t\t<div className='barlabel'>\r\n\t\t\t\t\t\t      {arr}\r\n\t\t\t\t\t\t    </div>\r\n\t\t  \t\t\t\t</div>\r\n\t\t  \t\t\t\t)}\r\n\t\t  \t\t\t</div>\r\n\r\n\t\t  \t\t\t<Container maxWidth=\"md\">\r\n\t\t\t  \t\t\t<p>Steps: <span style={{color: messageColor}}>{stepsMessage}</span></p>\r\n\r\n\t\t  \t\t\t\t<Button onClick={() => this.onGenerateArray()} variant=\"contained\" color=\"primary\" style={{float: 'left', marginRight: '10px', textTransform: 'none'}}>\r\n  \t\t\t\t\t\t\tRandomize\r\n\t\t\t\t\t\t</Button>\r\n\t\t  \r\n\t\t  \t\t\t\t\r\n\t\t\t\t\t\t{buttonDisable === 'enabled' \r\n\t\t\t\t\t\t? \r\n\t\t\t\t\t\t(<Button onClick={() => this.sortStart()} variant=\"contained\" color=\"primary\" style={{float: 'left', marginRight: '10px', textTransform: 'none'}}>\r\n  \t\t\t\t\t\t\tSort\r\n\t\t\t\t\t\t</Button>) \r\n\t\t\t\t\t\t: \r\n\t\t\t\t\t\t(<Button onClick={() => this.sortStart()} variant=\"contained\" disabled color=\"primary\" style={{float: 'left', marginRight: '10px', textTransform: 'none'}}>\r\n  \t\t\t\t\t\t\tSort\r\n\t\t\t\t\t\t</Button>)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={() => this.onStop()} style={{float: 'left'}}>Stop</Button>\r\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={() => this.onReset()} style={{float: 'left'}}>Reset</Button>\r\n\r\n\t\t\t\t\t\t{buttonDisable === 'enabled'\r\n\t\t\t\t\t\t?\r\n\t\t\t  \t\t\t(<FormControl style={{float: 'right', bottom: '13px'}}>\r\n\t\t\t\t\t       <InputLabel id=\"demo-simple-select-label\"></InputLabel>\r\n\t\t\t\t\t       <Select\r\n\t\t\t\t\t         labelId=\"demo-simple-select-label\"\r\n\t\t\t\t\t         id=\"demo-simple-select\"\r\n\t\t\t\t\t         value={algorithm}\r\n\t\t\t\t\t         onChange={this.handleAlgorithmChange}>\r\n\r\n\t\t\t\t\t         <MenuItem value={'bubble'}>Bubble Sort</MenuItem>\r\n\t\t\t\t\t         <MenuItem value={'insertion'}>Insertion Sort</MenuItem>\r\n\t\t\t\t\t         <MenuItem value={'selection'}>Selection Sort</MenuItem>\r\n\t\t\t\t\t       </Select>\r\n\t\t\t\t\t\t</FormControl>)\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t(<FormControl disabled style={{float: 'right', bottom: '13px'}}>\r\n\t\t\t\t\t       <InputLabel id=\"demo-simple-select-label\"></InputLabel>\r\n\t\t\t\t\t       <Select\r\n\t\t\t\t\t         labelId=\"demo-simple-select-label\"\r\n\t\t\t\t\t         id=\"demo-simple-select\"\r\n\t\t\t\t\t         value={algorithm}\r\n\t\t\t\t\t         onChange={this.handleAlgorithmChange}>\r\n\r\n\t\t\t\t\t         <MenuItem value={'bubble'}>Bubble Sort</MenuItem>\r\n\t\t\t\t\t         <MenuItem value={'insertion'}>Insertion Sort</MenuItem>\r\n\t\t\t\t\t         <MenuItem value={'selection'}>Selection Sort</MenuItem>\r\n\t\t\t\t\t       </Select>\r\n\t\t\t\t\t\t</FormControl>)\r\n\t\t\t\t\t\t}\r\n\t\t\t  \t\t\t\r\n\t\t  \t\t\t\t<Typography id=\"discrete-slider-restrict\" style={{marginTop: '100px'}}>\r\n\t\t\t\t\t\t\t  Change Speed\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t \tstyle={{width: '90%', marginTop: '50px'}}\r\n\t\t\t\t\t\t\tdefaultValue={1100}\r\n\t\t\t\t\t\t\tvalueLabelFormat={this.valueLabelFormat}\r\n\t\t\t\t\t\t\tgetAriaValueText={this.valuetext}\r\n\t\t\t\t\t\t\taria-labelledby=\"discrete-slider-restrict\"\t\t\t\t\t\r\n\t\t\t\t\t\t\tvalueLabelDisplay=\"off\"\r\n\t\t\t\t\t\t\tmin={100}\r\n\t\t\t\t\t\t\tmax={2100}  \r\n\t\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\t\tmarks={this.marks}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Container>\t\t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t);\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div id=\"outPopUp\">\r\n\t\t\t  \t<h1>Click Randomize to get some numbers!</h1>\r\n\t\t\t  \t<Button onClick={() => this.onGenerateArray()} variant=\"contained\" color=\"primary\" style={{textTransform: 'none'}}>\r\n\t  \t\t\t\tRandomize\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ArrayVisual;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport ArrayVisual from './components/ArrayVisual/ArrayVisual';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      array: [],\r\n      algorithm: 'bubble',\r\n      sort: false,\r\n    }\r\n  }\r\n\r\n  onGenerateArray = () => {\r\n    const ARRAY_LENGTH = 6;\r\n    const min = 1;\r\n    const max = 80;\r\n    this.setState({array: Array.from(Array(ARRAY_LENGTH)).map(x=>Math.floor(Math.random() * (max-min) + min))})\r\n  }\r\n\r\n  onBubbleChange = () => {\r\n    this.setState({algorithm: 'bubble'})\r\n  }\r\n\r\n  onSort = () => {\r\n    if(this.state.sort === false) {\r\n      this.setState({sort: true})\r\n    }else{\r\n      this.setState({sort: false})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ArrayVisual array={this.state.array} sort={this.state.sort} onSort={this.onSort}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}