{"version":3,"sources":["logo.svg","components/BubbleSort/BubbleSort.js","components/ArrayVisual/ArrayVisual.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","bubbleSort","auxillaryArray","animations","swapped","len","length","i","push","tmp","ArrayVisual","props","sortStart","setState","stop","state","algorithm","array","console","log","onGenerateArray","swapMessage","Array","from","map","x","Math","floor","random","marks","value","label","valuetext","speed","valueLabelFormat","findIndex","mark","handleAlgorithmChange","event","target","onStop","messageColor","sorted","index","b1HTML","b2HTML","setTimeout","slice","sort","a","b","bubbleSortAnimated","frameEnd","swap","action","bar1","document","getElementsByClassName","bar2","innerText","style","backgroundColor","self","newArray","temp","this","className","arr","idx","height","key","Container","maxWidth","color","Button","onClick","variant","float","marginRight","textTransform","FormControl","bottom","InputLabel","id","Select","labelId","onChange","MenuItem","Typography","marginTop","Slider","width","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","min","max","step","React","Component","App","onBubbleChange","onSort","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bb4a88be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function bubbleSortAnimated(array) {\r\n    let animations  = [];\r\n    let auxillaryArray = array.slice();\r\n    bubbleSort(auxillaryArray, animations);\r\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n    //console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray, auxillaryArray));\r\n    array = auxillaryArray;\r\n    return [animations, array];\r\n}\r\n\r\n\r\nlet bubbleSort = (auxillaryArray, animations) => {\r\n    let len = auxillaryArray.length;\r\n    let swapped;\r\n    do {\r\n        swapped = false;\r\n        for (let i = 0; i < len; i++) {\r\n        \tanimations.push([\"compare\", i, i + 1]);\r\n            if (auxillaryArray[i] > auxillaryArray[i + 1]) {\r\n                let tmp = auxillaryArray[i];\r\n                auxillaryArray[i] = auxillaryArray[i + 1];\r\n                auxillaryArray[i + 1] = tmp;\r\n                swapped = true;\r\n                animations.push([\"swap\", i, auxillaryArray[i + 1]]);\r\n            }\r\n        }\r\n    } while (swapped);\r\n    animations.push([\"sorted\", 0, 0]);\r\n    return auxillaryArray;\r\n};\r\n\r\n\r\n/*\r\nfunction bubbleSort(auxillaryArray, animations) {\r\n    const N = auxillaryArray.length;\r\n    let iters = N - 1;\r\n    while(iters > 0) {\r\n        let swapped = false;\r\n        for(let i = 0; i < iters; ++i) {\r\n            animations.push([\"compare\", i, i + 1]);\r\n            //animations.push([\"comparision2\", i, i + 1]);\r\n            if(auxillaryArray[i] > auxillaryArray[i + 1]) {\r\n                swapped = true;\r\n                animations.push([\"swap\", i, auxillaryArray[i + 1]]);\r\n                //animations.push([\"swap\", i + 1, auxillaryArray[i]]);\r\n                swap(auxillaryArray, i, i + 1);\r\n            }\r\n        }\r\n        if(swapped === false) break;\r\n        iters--;\r\n    }\r\n}*/\r\n\r\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\r\n    let temp = auxillaryArray[firstIndex];\r\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\r\n    auxillaryArray[secondIndex] = temp;\r\n}\r\n\r\nfunction arraysAreEqual(firstArray, secondArray) {\r\n    if (firstArray.length !== secondArray.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < firstArray.length; i++) {\r\n      if (firstArray[i] !== secondArray[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n}\r\n","import React from 'react';\r\nimport './ArrayVisual.css';\r\nimport {bubbleSortAnimated} from '../BubbleSort/BubbleSort';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst ANIMATION_SPEED = 300; //in ms\r\n\r\nclass ArrayVisual extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tarray: [],\r\n\t\t\tsorted: false,\r\n\t\t\tswapMessage: '',\r\n\t\t\tmessageColor: 'green',\r\n\t\t\tspeed: 600,\r\n\t\t\tstop: false,\r\n\t\t\talgorithm: 'bubble',\r\n\t\t}\r\n\t}\r\n\r\n\tsortStart = () => {\r\n\t\tthis.setState({stop: false})\r\n\r\n\t\tif(this.state.algorithm === 'bubble') {\r\n\t\t\tthis.bubbleSort(this.state.array,0, 0, 0)\r\n\t\t} else {\r\n\t\t\tconsole.log('not yet')\r\n\t\t}\r\n\t}\r\n\r\n\tbubbleSort(array, index, b1HTML, b2HTML) {\r\n\t\tsetTimeout(() => {\r\n\t\tconst [animations,sortArray] = bubbleSortAnimated(array);\r\n\t\tvar frameEnd = animations.length;\r\n\t\tif(index === frameEnd) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar max = 6;\r\n\t\tvar swap = false;\r\n\t\t\r\n        \tvar action = animations[index][0];\r\n\t        var bar1 = document.getElementsByClassName('bar')[animations[index][1]];\r\n\t        var bar2 = document.getElementsByClassName('bar')[animations[index][1] + 1];\r\n\t   \r\n\t   \t\tif(this.state.stop === true) {\r\n        \t\tconsole.log('stopped')\r\n        \t\treturn;\r\n        \t}\r\n\r\n        \tif(action === 'compare') {\r\n        \t\tif(bar1 && bar2) {\r\n        \t\tthis.setState({swapMessage: `Comparing ${bar1.innerText} and ${bar2.innerText}`})\r\n        \t\tthis.setState({messageColor: 'red'})\r\n\r\n\t        \tbar1.style.backgroundColor = 'red';\r\n\t        \tbar2.style.backgroundColor = 'red';\r\n        \t\t}\r\n\t        \tb1HTML = animations[index][1];\r\n\t        \tb2HTML = animations[index][2];\r\n\t     \r\n\r\n        \t}else if(action === 'swap'){\r\n        \t\tswap = true;\r\n        \t\tif(bar1 && bar2) {\r\n\t\t\t\t\tbar1.style.backgroundColor = 'green';\r\n\t\t\t        bar2.style.backgroundColor = 'green';\r\n\t\t\t\t}\r\n        \t\tthis.setState({swapMessage: `Swapping ${bar1.innerText} with ${bar2.innerText}`})\r\n        \t\tthis.setState({messageColor: 'green'})\r\n    \r\n        \t} else if(action === 'sorted') {\r\n        \t\tthis.setState({swapMessage: 'Sorted!'})\r\n        \t\tthis.setState({messageColor: 'green'})\r\n        \t\treturn;\r\n        \t}\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t//console.log(bar2)\r\n\t\t\t\t\tif(bar1 && bar2) {\r\n\t\t\t\t\tbar1.style.backgroundColor = '#357edd';\r\n\t\t\t        bar2.style.backgroundColor = '#357edd';\r\n\t\t\t\t\t}\r\n\t\t\t        if(swap) {\r\n\t\t\t        \tconst self = this\r\n\t\t\t        \tconst newArray = self.state.array.slice()\r\n\t\t\t        \tvar temp = newArray[b1HTML];\r\n\t\t\t        \tnewArray[b1HTML] = newArray[b2HTML]\r\n\t\t\t        \tnewArray[b2HTML] = temp   \r\n\t\t\t        \t//console.log('swap', newArray[b2HTML], newArray[b1HTML], 'b1HTML', b1HTML)\r\n\t\t\t        \tself.setState({array: newArray})\r\n\t\t\t        }\r\n\t\t\t\t}, this.state.speed)\r\n        this.bubbleSort(array, ++index, b1HTML, b2HTML);  \r\n\t\t}, this.state.speed);\r\n\r\n\t}\r\n\r\n\tonGenerateArray = () => {\r\n\t\tthis.setState({stop: true})\r\n\t\tthis.setState({swapMessage: ''})\r\n\t    const ARRAY_LENGTH = 6;\r\n\t    const min = 1;\r\n\t    const max = 80;\r\n\t    this.setState({array: Array.from(Array(ARRAY_LENGTH)).map(x=>Math.floor(Math.random() * (max-min) + min))})\r\n  \t}\r\n\r\n\r\n\t\r\n\tmarks = [\r\n\t  {\r\n\t    value: 100,\r\n\t    label: 'Fastest',\r\n\t  },\r\n\t  {\r\n\t    value: 600,\r\n\t    label: 'Faster',\r\n\t  },\r\n\t  {\r\n\t    value: 1100,\r\n\t    label: 'Medium',\r\n\t  },\r\n\t  {\r\n\t    value: 1700,\r\n\t    label: 'Slower',\r\n\t  },\r\n\t  {\r\n\t    value: 2100,\r\n\t    label: 'Slowest',\r\n\t  },\r\n\t];\r\n\r\n\tvaluetext = (value) => {\r\n\t\tif(this.state.speed != value) {\r\n\t\t\tthis.setState({speed: value})\r\n\t\t}\r\n\t \treturn({value})\r\n\t}\r\n\r\n\tvalueLabelFormat = (value) => {\r\n\t  return this.marks.findIndex((mark) => mark.value === value) + 1;\r\n\t}\r\n\r\n\r\n\thandleAlgorithmChange = (event) => {\r\n\t  this.setState({algorithm: event.target.value})\r\n\t  return event.target.value\r\n\t};\r\n\r\n\tonStop = () => {\r\n\t\tthis.setState({stop: true})\r\n\t\tthis.setState({swapMessage: 'Stopped'})\r\n\t\tthis.setState({messageColor: 'red'})\r\n  \t}\r\n\r\n\trender() {\r\n\t\tif(this.state.array.length) {\r\n  \t\t\treturn ( \r\n  \t\t\t\t<div>\r\n\t  \t\t\t\t<div className=\"barcontainer\">\r\n\t  \t\t\t\t\t<div className='barcontainerheader'></div>\r\n\t\t  \t\t\t\t{this.state.array.map((arr, idx) => \r\n\t\t\t\t\t\t<div className='bar' style={{height: arr+10 +'%'}}  key= {idx}>\r\n\t\t  \t\t\t\t\t<div className='barlabel'>\r\n\t\t\t\t\t\t      {arr}\r\n\t\t\t\t\t\t    </div>\r\n\t\t  \t\t\t\t</div>\r\n\t\t  \t\t\t\t)}\r\n\r\n\r\n\t\t  \t\t\t</div>\r\n\r\n\t\t  \t\t\t<Container maxWidth=\"md\">\r\n\t\t\t  \t\t\t<p>Steps: <span style={{color: this.state.messageColor}}>{this.state.swapMessage}</span></p>\r\n\r\n\r\n\t\t  \t\t\t\t<Button onClick={() => this.onGenerateArray()} variant=\"contained\" color=\"primary\" style={{float: 'left', marginRight: '10px', textTransform: 'none'}}>\r\n  \t\t\t\t\t\t\tRandomize\r\n\t\t\t\t\t\t</Button>\r\n\t\t  \r\n\t\t\t  \t\t\t<Button onClick={() => this.sortStart()} variant=\"contained\" color=\"primary\" style={{float: 'left', marginRight: '10px', textTransform: 'none'}}>\r\n  \t\t\t\t\t\t\tSort\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={() => this.onStop()} style={{float: 'left'}}>Stop</Button>\r\n\r\n\t\t\t  \t\t\t<FormControl style={{float: 'right', bottom: '13px'}}>\r\n\t\t\t\t\t\t       <InputLabel id=\"demo-simple-select-label\"></InputLabel>\r\n\t\t\t\t\t\t       <Select\r\n\t\t\t\t\t\t         labelId=\"demo-simple-select-label\"\r\n\t\t\t\t\t\t         id=\"demo-simple-select\"\r\n\t\t\t\t\t\t         value={this.state.algorithm}\r\n\t\t\t\t\t\t         onChange={this.handleAlgorithmChange}\r\n\t\t\t\t\t\t       >\r\n\t\t\t\t\t\t         <MenuItem value={'bubble'}>Bubble Sort</MenuItem>\r\n\t\t\t\t\t\t         <MenuItem value={'insertion'}>Insertion Sort</MenuItem>\r\n\t\t\t\t\t\t         <MenuItem value={'selection'}>Selection Sort</MenuItem>\r\n\t\t\t\t\t\t       </Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t  \t\t\t\r\n\t\t  \t\t\t\t<Typography id=\"discrete-slider-restrict\" style={{marginTop: '100px'}}>\r\n\t\t\t\t\t\t\t  Change Speed\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t \tstyle={{width: '90%', marginTop: '50px'}}\r\n\t\t\t\t\t\t\tdefaultValue={600}\r\n\t\t\t\t\t\t\tvalueLabelFormat={this.valueLabelFormat}\r\n\t\t\t\t\t\t\tgetAriaValueText={this.valuetext}\r\n\t\t\t\t\t\t\taria-labelledby=\"discrete-slider-restrict\"\t\t\t\t\t\r\n\t\t\t\t\t\t\tvalueLabelDisplay=\"off\"\r\n\t\t\t\t\t\t\tmin={100}\r\n\t\t\t\t\t\t\tmax={2100}  \r\n\t\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\t\tmarks={this.marks}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Container>\r\n  \t\t\t\t\r\n  \t\t\t\t</div>\r\n\r\n  \t\t\t);\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<div id=\"outPopUp\">\r\n\t\t\t  \t<h1>Click Randomize to get some numbers!</h1>\r\n\t\t\t  \t<Button onClick={() => this.onGenerateArray()} variant=\"contained\" color=\"primary\" style={{textTransform: 'none'}}>\r\n\t  \t\t\t\tRandomize\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ArrayVisual;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Navigation from './components/Navigation/Navigation';\nimport ArrayVisual from './components/ArrayVisual/ArrayVisual';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      array: [],\n      algorithm: 'bubble',\n      sort: false,\n    }\n  }\n\n  onGenerateArray = () => {\n    const ARRAY_LENGTH = 6;\n    const min = 1;\n    const max = 80;\n    this.setState({array: Array.from(Array(ARRAY_LENGTH)).map(x=>Math.floor(Math.random() * (max-min) + min))})\n  }\n\n  onBubbleChange = () => {\n    this.setState({algorithm: 'bubble'})\n  }\n\n  onSort = () => {\n    if(this.state.sort === false) {\n      this.setState({sort: true})\n    }else{\n      this.setState({sort: false})\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/*<Navigation onGenerateArray = {this.onGenerateArray} onBubbleChange={this.onBubbleChange} onSort={this.onSort}/>*/}\n        <ArrayVisual array={this.state.array} sort={this.state.sort} onSort={this.onSort}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}