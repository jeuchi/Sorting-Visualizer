{"version":3,"sources":["components/BubbleSort/BubbleSort.js","components/InsertionSort/InsertionSort.js","components/ArrayVisual/ArrayVisual.js","App.js","serviceWorker.js","index.js"],"names":["bubbleSort","auxillaryArray","animations","swapped","len","length","i","push","tmp","insertionSort","inputArr","key","j","ArrayVisual","props","sortStart","setState","stop","buttonDisable","state","algorithm","array","onGenerateArray","swapMessage","Array","from","map","x","Math","floor","random","marks","value","label","valuetext","speed","valueLabelFormat","findIndex","mark","handleAlgorithmChange","event","target","onStop","messageColor","sorted","index","b1HTML","b2HTML","setTimeout","slice","insertionSortAnimated","frameEnd","swap","action","document","getElementsByClassName","style","backgroundColor","innerText","check","console","log","self","newArray","temp","this","bubbleSortAnimated","bar1","bar2","className","arr","idx","height","Container","maxWidth","color","Button","onClick","variant","float","marginRight","textTransform","disabled","FormControl","bottom","InputLabel","id","Select","labelId","onChange","MenuItem","Typography","marginTop","Slider","width","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","min","max","step","React","Component","App","onBubbleChange","onSort","sort","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c4bb23ec.chunk.js","sourcesContent":["export function bubbleSortAnimated(array) {\r\n    let animations  = [];\r\n    let auxillaryArray = array.slice();\r\n    bubbleSort(auxillaryArray, animations);\r\n    return [animations];\r\n}\r\n\r\n\r\nlet bubbleSort = (auxillaryArray, animations) => {\r\n    let len = auxillaryArray.length;\r\n    let swapped;\r\n    do {\r\n        swapped = false;\r\n        for (let i = 0; i < len; i++) {\r\n        \tanimations.push([\"compare\", i, i + 1]);\r\n            if (auxillaryArray[i] > auxillaryArray[i + 1]) {\r\n                let tmp = auxillaryArray[i];\r\n                auxillaryArray[i] = auxillaryArray[i + 1];\r\n                auxillaryArray[i + 1] = tmp;\r\n                swapped = true;\r\n                animations.push([\"swap\", i, auxillaryArray[i + 1]]);\r\n            }\r\n        }\r\n    } while (swapped);\r\n    animations.push([\"sorted\", 0, 0]);\r\n    return auxillaryArray;\r\n};\r\n\r\n","export function insertionSortAnimated(array) {\r\n    let animations  = [];\r\n    let auxillaryArray = array.slice();\r\n    insertionSort(auxillaryArray, animations);\r\n    return [animations];\r\n}\r\n\r\nlet insertionSort = (inputArr, animations) => {\r\n    let length = inputArr.length;\r\n    for (let i = 1; i < length; i++) {\r\n        animations.push([\"target\", i]);\r\n        let key = inputArr[i];\r\n        let j = i - 1;\r\n        while (j >= 0 && inputArr[j] > key) {\r\n            inputArr[j + 1] = inputArr[j];\r\n            animations.push([\"swap\", i, j]);\r\n            j = j - 1;\r\n            animations.push([\"target\", j+1]);\r\n        }\r\n        inputArr[j + 1] = key;\r\n    }\r\n    animations.push([\"sorted\", -1, -1]);\r\n    return inputArr;\r\n};","import React from 'react';\r\nimport './ArrayVisual.css';\r\nimport {bubbleSortAnimated} from '../BubbleSort/BubbleSort';\r\nimport {insertionSortAnimated} from '../InsertionSort/InsertionSort';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nclass ArrayVisual extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tarray: [],\r\n\t\t\tsorted: false,\r\n\t\t\tswapMessage: '',\r\n\t\t\tmessageColor: 'green',\r\n\t\t\tspeed: 600,\r\n\t\t\tstop: false,\r\n\t\t\talgorithm: 'bubble',\r\n\t\t\tbuttonDisable: 'enabled'\r\n\t\t}\r\n\t}\r\n\r\n\tsortStart = () => {\r\n\t\tthis.setState({stop: false})\r\n\t\tthis.setState({buttonDisable: 'disable'})\r\n\r\n\t\tif(this.state.algorithm === 'bubble') {\r\n\t\t\tthis.bubbleSort(this.state.array,0, 0, 0)\r\n\t\t} else if(this.state.algorithm === 'insertion') {\r\n\t\t\tthis.insertionSort(this.state.array,0,0,0)\r\n\t\t}\r\n\t}\r\n\r\n\tinsertionSort(array, index, b1HTML, b2HTML) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst [animations] = insertionSortAnimated(array);\r\n\t\t\tvar frameEnd = animations.length;\r\n\t\t\tif(index === frameEnd) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tvar swap = false;\r\n\t\t\tvar action = animations[index][0];\r\n\r\n\t\t    if(this.state.stop === true) {\r\n\t        \tconsole.log('stopped')\r\n\t        \treturn;\r\n\t        }\r\n\r\n\t        if(action === 'target') {\r\n\t        \tvar target = document.getElementsByClassName('bar')[animations[index][1]];\r\n\t        \ttarget.style.backgroundColor = 'orange';\r\n\t        \tb1HTML = animations[index][1];\r\n\t        \tthis.setState({swapMessage: `Target ${target.innerText}`})\r\n        \t\tthis.setState({messageColor: 'orange'})\r\n\t        }else if(action === 'swap') {\r\n\t        \ttarget = document.getElementsByClassName('bar')[animations[index][2]+1];\r\n\t        \tvar check = document.getElementsByClassName('bar')[animations[index][2]];\r\n\t        \tconsole.log(check)\r\n\t        \ttarget.style.backgroundColor = 'purple';\r\n\t        \tcheck.style.backgroundColor = 'purple';\r\n\t        \tb2HTML = animations[index][2];  \t\r\n\t        \tswap = true;\r\n\t        \tthis.setState({swapMessage: `Target ${target.innerText} less than ${check.innerText}`})\r\n        \t\tthis.setState({messageColor: 'purple'})\r\n\t        } else if(action === 'sorted') {\r\n        \t\tthis.setState({swapMessage: 'Sorted!'})\r\n        \t\tthis.setState({messageColor: 'green'})\r\n        \t\tthis.setState({buttonDisable: 'enabled'})\r\n        \t\treturn;\r\n        \t}\r\n\r\n\t        setTimeout(() => {\r\n\t\t\t\tif(target) {\r\n\t\t\t        target.style.backgroundColor = '#357edd';\r\n\t\t\t\t}\r\n\t\t\t\tif(check)\r\n\t\t\t\t\tcheck.style.backgroundColor = '#357edd';\r\n\r\n\t\t\t    if(swap) {\r\n\t\t\t        const self = this\r\n\t\t\t        const newArray = self.state.array.slice()\r\n\t\t\t        var temp = newArray[b1HTML];\r\n\t\t\t        newArray[b1HTML] = newArray[b2HTML]\r\n\t\t\t        newArray[b2HTML] = temp   \r\n\t\t\t        \t\r\n\t\t\t        self.setState({array: newArray})\r\n\t\t\t    }\r\n\t\t\t}, this.state.speed)\r\n\r\n\t        this.insertionSort(array,++index,b1HTML,b2HTML)\r\n\t\t}, this.state.speed);\r\n\r\n\t}\r\n\r\n\tbubbleSort(array, index, b1HTML, b2HTML) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst [animations] = bubbleSortAnimated(array);\r\n\t\t\tvar frameEnd = animations.length;\r\n\t\t\tif(index === frameEnd) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tvar swap = false;\r\n        \tvar action = animations[index][0];\r\n\t        var bar1 = document.getElementsByClassName('bar')[animations[index][1]];\r\n\t        var bar2 = document.getElementsByClassName('bar')[animations[index][1] + 1];\r\n\t   \r\n\t   \t\tif(this.state.stop === true) {\r\n        \t\tconsole.log('stopped')\r\n        \t\treturn;\r\n        \t}\r\n\r\n        \tif(action === 'compare') {\r\n        \t\tif(bar1 && bar2) {\r\n        \t\tthis.setState({swapMessage: `Comparing ${bar1.innerText} and ${bar2.innerText}`})\r\n        \t\tthis.setState({messageColor: 'red'})\r\n\r\n\t        \tbar1.style.backgroundColor = 'red';\r\n\t        \tbar2.style.backgroundColor = 'red';\r\n        \t\t}\r\n\t        \tb1HTML = animations[index][1];\r\n\t        \tb2HTML = animations[index][2];\r\n        \t}else if(action === 'swap'){\r\n        \t\tswap = true;\r\n        \t\tif(bar1 && bar2) {\r\n\t\t\t\t\tbar1.style.backgroundColor = 'purple';\r\n\t\t\t        bar2.style.backgroundColor = 'purple';\r\n\t\t\t\t}\r\n        \t\tthis.setState({swapMessage: `Swapping ${bar1.innerText} with ${bar2.innerText}`})\r\n        \t\tthis.setState({messageColor: 'purple'})\r\n    \r\n        \t} else if(action === 'sorted') {\r\n        \t\tthis.setState({swapMessage: 'Sorted!'})\r\n        \t\tthis.setState({messageColor: 'green'})\r\n        \t\tthis.setState({buttonDisable: 'enabled'})\r\n        \t\treturn;\r\n        \t}\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif(bar1 && bar2) {\r\n\t\t\t\tbar1.style.backgroundColor = '#357edd';\r\n\t\t        bar2.style.backgroundColor = '#357edd';\r\n\t\t\t\t}\r\n\t\t        if(swap) {\r\n\t\t        \tconst self = this\r\n\t\t        \tconst newArray = self.state.array.slice()\r\n\t\t        \tvar temp = newArray[b1HTML];\r\n\t\t        \tnewArray[b1HTML] = newArray[b2HTML]\r\n\t\t        \tnewArray[b2HTML] = temp   \r\n\t\t        \tself.setState({array: newArray})\r\n\t\t        }\r\n\t\t\t}, this.state.speed)\r\n\r\n        \tthis.bubbleSort(array, ++index, b1HTML, b2HTML);  \r\n\t\t}, this.state.speed);\r\n\r\n\t}\r\n\r\n\tonGenerateArray = () => {\r\n\t\tthis.setState({stop: true})\r\n\t\tthis.setState({swapMessage: ''})\r\n\t    const ARRAY_LENGTH = 6;\r\n\t    const min = 1;\r\n\t    const max = 80;\r\n\t    this.setState({array: Array.from(Array(ARRAY_LENGTH)).map(x=>Math.floor(Math.random() * (max-min) + min))})\r\n  \t}\r\n\r\n\tmarks = [\r\n\t  {\r\n\t    value: 100,\r\n\t    label: 'Fastest',\r\n\t  },\r\n\t  {\r\n\t    value: 600,\r\n\t    label: 'Faster',\r\n\t  },\r\n\t  {\r\n\t    value: 1100,\r\n\t    label: 'Medium',\r\n\t  },\r\n\t  {\r\n\t    value: 1700,\r\n\t    label: 'Slower',\r\n\t  },\r\n\t  {\r\n\t    value: 2100,\r\n\t    label: 'Slowest',\r\n\t  },\r\n\t];\r\n\r\n\tvaluetext = (value) => {\r\n\t\tif(this.state.speed !== value) {\r\n\t\t\tthis.setState({speed: value})\r\n\t\t}\r\n\t \treturn({value})\r\n\t}\r\n\r\n\tvalueLabelFormat = (value) => {\r\n\t  return this.marks.findIndex((mark) => mark.value === value) + 1;\r\n\t}\r\n\r\n\thandleAlgorithmChange = (event) => {\r\n\t  this.setState({algorithm: event.target.value})\r\n\t  return event.target.value\r\n\t};\r\n\r\n\tonStop = () => {\r\n\t\tthis.setState({buttonDisable: 'enabled'})\r\n\t\tthis.setState({stop: true})\r\n\t\tthis.setState({swapMessage: 'Stopped'})\r\n\t\tthis.setState({messageColor: 'red'})\r\n  \t}\r\n\r\n\trender() {\r\n\t\tif(this.state.array.length) {\r\n  \t\t\treturn ( \r\n  \t\t\t\t<div>\r\n\t  \t\t\t\t<div className=\"barcontainer\">\r\n\t  \t\t\t\t\t<div className='barcontainerheader'></div>\r\n\r\n\t\t  \t\t\t\t{this.state.array.map((arr, idx) => \r\n\t\t\t\t\t\t<div className='bar' style={{height: arr+10 +'%'}}  key= {idx}>\r\n\t\t  \t\t\t\t\t<div className='barlabel'>\r\n\t\t\t\t\t\t      {arr}\r\n\t\t\t\t\t\t    </div>\r\n\t\t  \t\t\t\t</div>\r\n\t\t  \t\t\t\t)}\r\n\t\t  \t\t\t</div>\r\n\r\n\t\t  \t\t\t<Container maxWidth=\"md\">\r\n\t\t\t  \t\t\t<p>Steps: <span style={{color: this.state.messageColor}}>{this.state.swapMessage}</span></p>\r\n\r\n\t\t  \t\t\t\t<Button onClick={() => this.onGenerateArray()} variant=\"contained\" color=\"primary\" style={{float: 'left', marginRight: '10px', textTransform: 'none'}}>\r\n  \t\t\t\t\t\t\tRandomize\r\n\t\t\t\t\t\t</Button>\r\n\t\t  \r\n\t\t  \t\t\t\t\r\n\t\t\t\t\t\t{this.state.buttonDisable === 'enabled' \r\n\t\t\t\t\t\t? \r\n\t\t\t\t\t\t(<Button onClick={() => this.sortStart()} variant=\"contained\" color=\"primary\" style={{float: 'left', marginRight: '10px', textTransform: 'none'}}>\r\n  \t\t\t\t\t\t\tSort\r\n\t\t\t\t\t\t</Button>) \r\n\t\t\t\t\t\t: \r\n\t\t\t\t\t\t(<Button onClick={() => this.sortStart()} variant=\"contained\" disabled color=\"primary\" style={{float: 'left', marginRight: '10px', textTransform: 'none'}}>\r\n  \t\t\t\t\t\t\tSort\r\n\t\t\t\t\t\t</Button>)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={() => this.onStop()} style={{float: 'left'}}>Stop</Button>\r\n\r\n\t\t\t  \t\t\t<FormControl style={{float: 'right', bottom: '13px'}}>\r\n\t\t\t\t\t       <InputLabel id=\"demo-simple-select-label\"></InputLabel>\r\n\t\t\t\t\t       <Select\r\n\t\t\t\t\t         labelId=\"demo-simple-select-label\"\r\n\t\t\t\t\t         id=\"demo-simple-select\"\r\n\t\t\t\t\t         value={this.state.algorithm}\r\n\t\t\t\t\t         onChange={this.handleAlgorithmChange}>\r\n\r\n\t\t\t\t\t         <MenuItem value={'bubble'}>Bubble Sort</MenuItem>\r\n\t\t\t\t\t         <MenuItem value={'insertion'}>Insertion Sort</MenuItem>\r\n\t\t\t\t\t         <MenuItem value={'selection'}>Selection Sort</MenuItem>\r\n\t\t\t\t\t       </Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t  \t\t\t\r\n\t\t  \t\t\t\t<Typography id=\"discrete-slider-restrict\" style={{marginTop: '100px'}}>\r\n\t\t\t\t\t\t\t  Change Speed\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t \tstyle={{width: '90%', marginTop: '50px'}}\r\n\t\t\t\t\t\t\tdefaultValue={600}\r\n\t\t\t\t\t\t\tvalueLabelFormat={this.valueLabelFormat}\r\n\t\t\t\t\t\t\tgetAriaValueText={this.valuetext}\r\n\t\t\t\t\t\t\taria-labelledby=\"discrete-slider-restrict\"\t\t\t\t\t\r\n\t\t\t\t\t\t\tvalueLabelDisplay=\"off\"\r\n\t\t\t\t\t\t\tmin={100}\r\n\t\t\t\t\t\t\tmax={2100}  \r\n\t\t\t\t\t\t\tstep={null}\r\n\t\t\t\t\t\t\tmarks={this.marks}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Container>\t\t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t);\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div id=\"outPopUp\">\r\n\t\t\t  \t<h1>Click Randomize to get some numbers!</h1>\r\n\t\t\t  \t<Button onClick={() => this.onGenerateArray()} variant=\"contained\" color=\"primary\" style={{textTransform: 'none'}}>\r\n\t  \t\t\t\tRandomize\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ArrayVisual;","import React, { Component } from 'react';\nimport './App.css';\n\nimport ArrayVisual from './components/ArrayVisual/ArrayVisual';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      array: [],\n      algorithm: 'bubble',\n      sort: false,\n    }\n  }\n\n  onGenerateArray = () => {\n    const ARRAY_LENGTH = 6;\n    const min = 1;\n    const max = 80;\n    this.setState({array: Array.from(Array(ARRAY_LENGTH)).map(x=>Math.floor(Math.random() * (max-min) + min))})\n  }\n\n  onBubbleChange = () => {\n    this.setState({algorithm: 'bubble'})\n  }\n\n  onSort = () => {\n    if(this.state.sort === false) {\n      this.setState({sort: true})\n    }else{\n      this.setState({sort: false})\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ArrayVisual array={this.state.array} sort={this.state.sort} onSort={this.onSort}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}